{"version":3,"sources":["Components/DataTable.js","Components/Header.js","Components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","TableHead","className","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","people","results","rows","length","person","name","last","first","email","phone","cell","city","location","country","address","street","number","login","uuid","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","aria-label","rowCount","TableBody","slice","row","labelId","hover","tabIndex","component","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Header","Search","handleFilter","TextField","backgroundColor","placeholder","fullWidth","InputLabelProps","shrink","variant","onChange","App","setPeople","setResults","useEffect","fetch","peopleData","json","console","log","fetchPeople","input","toLowerCase","filteredPeople","filter","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d8a180.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Full Name (Last, First)' },\r\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email Address' },\r\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone Number' },\r\n  { id: 'city', numeric: false, disablePadding: false, label: 'City, Country' },\r\n  { id: 'address', numeric: false, disablePadding: false, label: 'Street Address' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead className={'TableHead'}>\r\n      <TableRow>\r\n        {headCells.map((headCell, index) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({people, results}) {\r\n  const rowSource = (results.length === 0) ? people : results;\r\n  const rows = rowSource.map(person => {\r\n    return {\r\n      name: `${person.name.last}, ${person.name.first}`,\r\n      email: person.email,\r\n      phone: person.cell,\r\n      city: `${person.location.city}, ${person.location.country}`,\r\n      address: `${person.location.street.number} ${person.location.street.name}`,\r\n      id: person.login.uuid\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.email}</TableCell>\r\n                      <TableCell align=\"left\">{row.phone}</TableCell>\r\n                      <TableCell align=\"left\">{row.city}</TableCell>\r\n                      <TableCell align=\"left\">{row.address}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height:  53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  )\r\n};","const Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Employee Information</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Search = ({handleFilter}) => {\r\n    return (\r\n        <TextField\r\n          id=\"filled-full-width\"\r\n          label=\"Search by First or Last Name\"\r\n          style={{ margin: '2rem auto', backgroundColor: 'white' }}\r\n          placeholder=\"Search for an Employee\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"filled\"\r\n          onChange={handleFilter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search;","import EnhancedTable from './Components/DataTable';\nimport Header from './Components/Header';\nimport Search from './Components/Search';\nimport './App.css';\nimport {useEffect, useState} from 'react';\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        const peopleData = await fetch('https://randomuser.me/api/?results=25');\n        const json = await peopleData.json();\n        console.log(json.results);\n        setPeople(json.results);\n      } catch (e) {\n        console.log(e);\n      };\n    };\n    fetchPeople();\n  }, []);\n  const handleFilter = (event) => {\n    let input = event.target.value.toLowerCase();\n    let filteredPeople = people.filter(person => {\n      return person.name.first.toLowerCase().indexOf(input) === 0 || person.name.last.toLowerCase().indexOf(input) === 0;\n    });\n    console.log(filteredPeople);\n    setResults(filteredPeople);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Search handleFilter={handleFilter}/>\n      <EnhancedTable results={results} people={people}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}